services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: agentmessage_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-agentmessage}
      POSTGRES_USER: ${POSTGRES_USER:-agentmessage_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_this_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - agentmessage-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-agentmessage_user} -d ${POSTGRES_DB:-agentmessage}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AgentMessage Database Service
  agentmessage_db_service:
    build: .
    container_name: agentmessage_db_service
    environment:
      - REMOTE_DISCOVERABLE=true
      - REMOTE_DB_HOST=postgres
      - REMOTE_DB_PORT=5432
      - REMOTE_DB_NAME=${POSTGRES_DB:-agentmessage}
      - REMOTE_DB_USER=${POSTGRES_USER:-agentmessage_user}
      - REMOTE_DB_PASSWORD=${POSTGRES_PASSWORD:-change_this_password}
      - REMOTE_DB_SSL_MODE=prefer
      - REMOTE_DB_MAX_CONNECTIONS=20
      - REMOTE_DB_MIN_CONNECTIONS=5
      - REMOTE_DB_CONNECTION_TIMEOUT=30
      - API_HOST=0.0.0.0
      - API_PORT=${API_SERVICE_PORT:-8000}
    # Remove external port exposure - only accessible via nginx
    expose:
      - "${API_SERVICE_PORT:-8000}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - agentmessage-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_SERVICE_PORT:-8000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: agentmessage_nginx
    ports:
      - "${HTTP_PORT:-9128}:80"   # HTTP (configurable)
      - "${HTTPS_PORT:-443}:443"  # HTTPS (configurable)
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf.template
      - ./ssl:/etc/nginx/ssl:ro
    environment:
      - SERVER_DOMAIN=${SERVER_DOMAIN:-localhost}
      - HTTPS_PORT=${HTTPS_PORT:-443}
      - HTTP_PORT=${HTTP_PORT:-9128}
      - SSL_CERT_FILE=${SSL_CERT_FILE:-/etc/nginx/ssl/server.crt}
      - SSL_KEY_FILE=${SSL_KEY_FILE:-/etc/nginx/ssl/server.key}
      - API_SERVICE_PORT=${API_SERVICE_PORT:-8000}
    command: /bin/sh -c "envsubst '$$SERVER_DOMAIN $$HTTPS_PORT $$HTTP_PORT $$API_SERVICE_PORT $$SSL_CERT_FILE $$SSL_KEY_FILE' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - agentmessage_db_service
    networks:
      - agentmessage-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: agentmessage-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-change_this_password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    # Remove external port exposure - only accessible via nginx
    expose:
      - "80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - agentmessage-network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: agentmessage-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - agentmessage-network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  agentmessage-network:
    driver: bridge